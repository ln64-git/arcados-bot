import * as dotenv from "dotenv";
import { SurrealDBManager } from "../database/SurrealDBManager";

dotenv.config();

async function testAutoGeneratedId() {
	const db = new SurrealDBManager();

	try {
		await db.connect();
		console.log("ðŸ”¹ Connected to database");

		// Test inserting a message without specifying id
		console.log("ðŸ”¹ Testing INSERT without id (auto-generated)...");
		try {
			const result = await db.db.query(`
				INSERT INTO messages (channel_id, guild_id, author_id, content, timestamp, attachments, embeds, created_at, updated_at, active)
				VALUES ('1430111461547446402', '1254694808228986912', '99195129516007424', 'Auto-generated ID test', '${new Date().toISOString()}', [], [], '${new Date().toISOString()}', '${new Date().toISOString()}', true)
			`);
			console.log("ðŸ”¹ Insert result:", result);
		} catch (error) {
			console.log("ðŸ”¸ Insert failed:", error.message);
		}

		// Test inserting another message
		console.log("ðŸ”¹ Testing second INSERT...");
		try {
			const result = await db.db.query(`
				INSERT INTO messages (channel_id, guild_id, author_id, content, timestamp, attachments, embeds, created_at, updated_at, active)
				VALUES ('1430111461547446402', '1254694808228986912', '99195129516007424', 'Second auto-generated ID test', '${new Date().toISOString()}', [], [], '${new Date().toISOString()}', '${new Date().toISOString()}', true)
			`);
			console.log("ðŸ”¹ Second insert result:", result);
		} catch (error) {
			console.log("ðŸ”¸ Second insert failed:", error.message);
		}

		// Query all messages
		console.log("ðŸ”¹ Querying all messages...");
		try {
			const allMessages = await db.db.query("SELECT * FROM messages");
			console.log(
				"ðŸ”¹ All messages count:",
				allMessages[0]?.result?.length || 0,
			);
			console.log("ðŸ”¹ All messages:", allMessages[0]?.result);
		} catch (error) {
			console.log("ðŸ”¸ Query failed:", error.message);
		}

		// Count messages
		console.log("ðŸ”¹ Counting messages...");
		try {
			const countResult = await db.db.query("SELECT count() FROM messages");
			console.log(
				"ðŸ”¹ Message count:",
				countResult[0]?.result?.[0]?.["count()"] || 0,
			);
		} catch (error) {
			console.log("ðŸ”¸ Count failed:", error.message);
		}

		// Test querying by guild_id
		console.log("ðŸ”¹ Querying by guild_id...");
		try {
			const guildMessages = await db.db.query(
				"SELECT * FROM messages WHERE guild_id = '1254694808228986912'",
			);
			console.log(
				"ðŸ”¹ Guild messages count:",
				guildMessages[0]?.result?.length || 0,
			);
		} catch (error) {
			console.log("ðŸ”¸ Guild query failed:", error.message);
		}
	} catch (error) {
		console.error("ðŸ”¸ Error:", error);
	} finally {
		await db.disconnect();
		console.log("ðŸ”¹ Disconnected");
	}
}

testAutoGeneratedId().catch(console.error);
